document.addEventListener('DOMContentLoaded', async () => { 

  try { 
    const productos = await cargarProductos();   
    const productosNormalizados = normalizarProductos(productos);   
    mostrarProductos(productosNormalizados);  // Muestra los productos inicialmente 
    configurarEventos(productosNormalizados);  // Configura los eventos para el filtrado y cambio de tema 
  } catch (error) { 
    console.error('Error:', error); 
    mostrarError('No se pudieron cargar los productos. Verifica la consola para más detalles.'); 
  } 
}); 

// Función para cargar productos desde JSON   

async function cargarProductos() { 

  try { 
    const response = await fetch('P2json.json'); 
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`); 
    return await response.json(); 
  } catch (error) { 
    console.error('Error al cargar productos:', error); 
    throw error; 
  } 
} 

// Normaliza los productos 
function normalizarProductos(productos) { 
  return productos.map(producto => { 
    let imagenPath = producto.imagen; 

    if (!imagenPath.startsWith('images/') && !imagenPath.startsWith('http')) { 
      imagenPath = `images/${imagenPath}`; 
    } 

    return { 
      ...producto, 
      imagen: imagenPath, 
      categoria: producto.categoria || 'sin-categoria', 
      precio: producto.precio ? `€${producto.precio.toFixed(2)}` : '€0.00' 
    }; 
  }); 
} 

// Muestra los productos en el DOM 

function mostrarProductos(productos) { 
  const contenedor = document.getElementById('contenedor-productos'); 
  if (!contenedor) { 
    console.error('No se encontró el contenedor de productos'); 
    return; 
  } 

  contenedor.innerHTML = ''; 

  productos.forEach(producto => { 
    const col = document.createElement('div'); 
    col.className = 'col-sm-6 col-md-4 mb-4'; 
    col.innerHTML = ` 
      <div class="col-sm-6 col-md-4 col-lg-3 mb-4"> 
        <div class="card h-100" style="width: 400px;"> 
          <img src="${producto.imagen}" class="card-img-top product-image" alt="${producto.titulo}" onerror="this.onerror=null; this.src='images/placeholder.jpg';" style="height: 200px; width: 100%; object-fit: cover;"> 

          <div class="card-body"> 
            <h5 class="card-title">${producto.titulo}</h5> 
            <p class="card-text">${producto.descripcion}</p> 
            <p class="text-primary fw-bold">${producto.precio}</p> 
            <div class="d-flex justify-content-between"> 
              <button class="btn btn-primary btn-sm ver-detalle" data-tallas="${producto.tallas}">Ver detalles</button> 
              <span class="badge bg-secondary">${producto.categoria}</span> 
            </div> 
          </div> 
        </div> 
      </div> 
    `; 
    contenedor.appendChild(col); 
  }); 
} 

// Configura eventos para el filtrado y el cambio de tema 
function configurarEventos(productos) { 
  // Filtrado de productos 
  document.getElementById('filtro').addEventListener('change', (event) => { 
    const categoriaSeleccionada = event.target.value; 
    const productosFiltrados = filtrarProductosPorCategoria(categoriaSeleccionada, productos); 
    mostrarProductos(productosFiltrados);  // Muestra los productos filtrados 
  }); 

 

  // Cambio de tema 
  const botonTema = document.getElementById('boton-tema'); 
  botonTema.addEventListener('click', () => { 
    const body = document.querySelector('body'); 
    const temaActual = body.getAttribute('data-bs-theme'); 
    if (temaActual === 'light') { 
      body.setAttribute('data-bs-theme', 'dark'); 
    } else { 
      body.setAttribute('data-bs-theme', 'light'); 
    } 
  }); 

 

  // Evento para el botón "Ver detalles" 
  document.addEventListener('click', (e) => { 
    if (e.target.classList.contains('ver-detalle')) { 
      const tallas = e.target.getAttribute('data-tallas'); 
      mostrarTallas(tallas); 
    } 
  }); 
} 

// Muestra las tallas del producto 
function mostrarTallas(tallas) { 
  alert(`Tallas disponibles: ${tallas}`); 
} 

// Filtrar productos por categoría 
function filtrarProductosPorCategoria(categoria, productos) { 
  if (!categoria) return productos;  // Si no hay categoría seleccionada, mostrar todos los productos 
  return productos.filter(producto => producto.categoria.toLowerCase() === categoria.toLowerCase()); 
} 

// Mostrar error si algo sale mal 
function mostrarError(mensaje) { 
  const contenedor = document.getElementById('contenedor-productos'); 
  contenedor.innerHTML = `<p class="text-danger">${mensaje}</p>`; 
} 
